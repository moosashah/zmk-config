#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM 1
#define SYMB 2
#define FUNC 3


&mt {
   flavor = "tap-preferred";
   tapping_term_ms = <180>;
};

/ { 

        keymap {
                compatible = "zmk,keymap";
                
   	default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						             &kp Y &kp U  &kp I  &kp O &kp P
		&kp A &mt LALT S &mt LCTRL D &mt LCMD F &kp G          &kp H &mt RCMD J &mt RCTRL K &mt RALT L &kp SEMI
		&mt LS(LC(LA(LCMD))) Z &kp X &kp C &kp V &kp B				 &kp N &kp M  &kp CMMA &kp DOT &mt RS(RA(RC(RCMD))) FSLH
          				&lt FUNC BSPC  &mt LSFT SPC  				                  &lt NUM RET &lt SYMB ESC
		>;
		};

    num_layer {
		bindings = <
		&none   &none   &none   &kp KP_SLASH   &none	          &kp SEMI &kp N7 &kp N8 &kp N9  &none
		&kp TAB   &kp LALT  &kp LCTRL &mt LCMD EQUAL    &none 	&kp APOS &kp N4  &kp N5 &kp N6  &kp N0
		&kp LS(LC(LA(LCMD))) &none	&none  &kp MINUS &none      &kp KP_DOT &kp N1 &kp N2 &kp N3  &none
					    &kp BSPC  &mt LSFT SPC   					                        &trans  &none
		>;
		};
		
		symb_layer {
		bindings = <
		&none   &none   &none   &none   &none    			           &kp BSLH  &kp GRAVE &kp DOLLAR &none &none 
		&kp TAB  &kp LALT &kp  LCTRL &kp LCMD  &none 			       &kp MINUS &kp LBKT  &kp LPAR  &kp LT   &none
		&kp LS(LC(LA(LCMD))) &none   &none   &none   &none     	 &kp EQUAL &kp RBKT &kp RPAR &kp GT &kp LS(LC(LA(LCMD))) 
					  &kp BSPC  &mt LSFT SPC  				                            &none &trans
		>;
		};	
		
		func_layer {
		bindings = <
		&trans  &kp C_BRI_INC  &kp C_VOL_UP &kp C_NEXT &none 			          &kp F1 &kp F2  &kp F3  &kp F4  &kp F5
		&mt LSFT TAB &kp LALT &mt LCTRL K_MUTE &mt LCMD C_PLAY_PAUSE &none  &kp LEFT &kp DOWN  &kp UP &kp RIGHT &trans 
		&trans  &kp C_BRI_DEC &kp C_VOL_DN &kp C_PREV &none   				      &trans &kp RS(RC(RG(N4)))  &kp RS(RG(N4))  &trans &trans   
					 &trans &none  					                                             &kp RET &kp ESC
		>;
		};	
        
	};
};
